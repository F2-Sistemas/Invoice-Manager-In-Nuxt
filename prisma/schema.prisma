// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Client {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  city      String?
  state     String?
  zipCode   String?
  country   String
  email     String?
  phone     String?
  invoices  Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("clients")
}

model Invoice {
  id               Int           @id @default(autoincrement())
  clientId         Int
  client           Client        @relation(fields: [clientId], references: [id], onDelete: Cascade)
  sequentialNumber Int
  issueDate        DateTime      @default(now())
  dueDate          DateTime
  currency         String        @default("BRL")
  subtotal         Decimal       @db.Decimal(10, 2)
  discount         Decimal       @default(0) @db.Decimal(10, 2)
  discountPercent  Decimal?      @db.Decimal(5, 2)
  tax              Decimal       @default(0) @db.Decimal(10, 2)
  taxPercent       Decimal?      @db.Decimal(5, 2)
  total            Decimal       @db.Decimal(10, 2)
  status           String        @default("pending") // pending, paid, overdue, cancelled
  notes            String?       @db.Text
  items            InvoiceItem[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  @@unique([clientId, sequentialNumber])
  @@map("invoices")
}

model InvoiceItem {
  id          Int      @id @default(autoincrement())
  invoiceId   Int
  invoice     Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  description String
  unity       String
  quantity    Decimal  @db.Decimal(10, 2)
  unitPrice   Decimal  @db.Decimal(10, 2)
  amount      Decimal  @db.Decimal(10, 2)
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("invoice_items")
}
